core:
  # EBEANS - Ebeans storage (will go to SqlLite or MySQL, as defined
  #     by bukkit.yml)
  # YAML - YAML storage in your plugins/HomeSpawnPlus directory.
  #     Will store one file per data type (home, spawn, etc).
  # YAML_SINGLE_FILE - YAML storage in your plugins/HomeSpawnPlus
  #     directory. Stores all data in single "data.yml" file.
  # PERSISTANCE_REIMPLEMENTED_EBEANS - use persitance reimplemented
  #     ebeans implementation. Exactly like EBEANS above except with
  #     a few extra benefits. http://goo.gl/rtdDH  To live-reload
  #     with this, due to a Bukkit limitation, you must edit
  #     plugin.yml and set 'database: false'
  #
  # This is one option that cannot be reloaded live with "/hsp rc",
  # you must restart Bukkit if you change this option.
  storage: EBEANS

  # Warn on any known plugin conflicts that might prevent HSP from
  # working the way the admin expects.
  warnConflicts: true

  # Warn if a strategy chain returns no location. While this might
  # be intended behavior, it can also hint at a configuration mistake.
  warnNullStrategy: true

  # Warn if the player ended up somewhere other than where HSP
  # expected. This often indicates another plugin doing something
  # that you don't intend.
  warnLocationChange: true

  # if any strategy takes longer than this many millis to execute
  # (1000 millis = 1 second), then print a performance warning.
  # Set to 0 to disable.
  warnPerformanceMillis: 250

  # this is ONLY used when "ops" is used in the "permissions" section
  # above.
  # In that case, any permissions listed here are given to everyone by
  # default (ops always have full permissions)
#  defaultPermissions:
#    - hsp.command.home.use 
#    - hsp.command.sethome.use 

  # set to true to enable players setting their homes by clicking beds.
  # they must also have the 'hsp.home.bedsethome' permission.
  bedsethome: true

  # If true, HSP will require 2 clicks on the bed to set the home. This
  # avoids accidentally setting your bedhome when you don't mean to.
  bedhome2clicks: true

  # If true, HSP will require it be night time in order for a bed home
  # to be saved by clicking on it. (ie. single player mechanics)
  bedHomeMustBeNight: false

  # If set to true, the player will never see the "You can only
  # sleep at night" message. Be warned this has the unfortunate side
  # effect that they can never actually sleep in their bed, either.
  bedHomeNeverDisplayNightMessage: false

  # This restores the "original" behavior where all bed clicks go
  # through (instead of supressing the first in 2click mode), which
  # makes it possible to night sleep on first click and set home on
  # 2 clicks. Note this is also possible without this option by
  # the player using sneak to sleep vs. set home.
  bedHomeOriginalBehavior: false
 
  # The default/main world. Strategies reference this as the default
  # world, you can change that here if you like.
  defaultWorld: world

  # set to true if you want plugin to change the spawn of the actual map
  # (ie. even if you turn this plugin off later, whatever default spawn
  # you set in various worlds will stay)
  override_world: true

  # if recordLastLogout is true, HSP will record the precise location
  # location the player logged out at and respawn them there, instead
  # of just letting Bukkit do it. This is an attempt to work around a
  # bug where people logout close to a wall and Bukkit tries to respawn
  # them in the wall
  recordLastLogout: false

  # set to true to have a bit more verbose logging in your server.log
  # about what HomeSpawnPlus is doing
  verboseLogging: false
  # set to true to have verbose logging in your server.log as
  # strategies are being evaluated - great for debugging and testing
  # your strategies when you first set them up.
  verboseStrategyLogging: false

  # Event priority; the basic assumption is that you want HSP to
  # be the final say in your onjoin/respawn event chains - if you
  # didn't want that you probably wouldn't be running HSP in the
  # first place. But you can change it here if you want to
  # for some reason.
  eventPriority: highest

  # HSP has a notion of "default home" which the player can change
  # by using /setdefaulthome. In the event that the player has
  # deleted their defaultHome and only one home is remaining on
  # a given world, this flag says to count that last home as the
  # "default" home, even if it wasn't specifically flagged as
  # the default.
  lastHomeIsDefault: true

  # localization. "en" for english, "fr" for french, etc. Will
  # use given localization if it exists, otherwise will fall
  # back to English as the default.
  # locales available: en, de, fr, nl, ru, pt
  locale: en

  # default color of messages. ie. %yellow%, %red%, ..
  defaultMessageColor: "%yellow%"

  # set to true if Bukkit should be forced to reload the target
  # chunk when a player teleports. This fixes "world hole" problems
  # on teleport (exactly the same as BananaChunk plugin does).
  # This option does nothing if BananaChunk is already installed.
  reloadChunkOnTeleport: false

  # Define the strategy HSP uses to determine if a player is new.
  #   BUKKIT: use Bukkit Player.hasPlayedBefore() method
  #   PLAYER_DAT: check for "player.dat" in the default world
  #   ORIGINAL: use HSP's original algorithm, which first checks
  #     HSP's database for any record, then falls back to a
  #     PLAYER_DAT check. This can be faster since it's a cached
  #     DB lookup instead of a file access, but it also means that
  #     you can't test "new player" strategies simply by removing
  #     the player.dat file.
  newPlayerStrategy: PLAYER_DAT

  # If enabled, "safe teleport" will be used for any teleport
  # HSP does. This means if the players location is not "safe"
  # (it has solid blocks that might suffocate them, is over lava,
  # etc), they will be teleported to the nearest "safe" location
  # instead.
  safeTeleport: true

  # If true, sleeping in a bed will overwrite the default home,
  # usually the one set by "/sethome" with no args.
  bedHomeOverwritesDefault: true

  # Set to true if you use Multiverse and want to take advantage
  # of HSP's event integration with it
  multiverseEnabled: false

  # set to true if you want to display teleporting messages
  # when a player types /home or /spawn. See web docs for how
  # to customize these messages: http://goo.gl/qhYmZ
  teleportMessages: false

  # Whether or not HSP should record the last location of a player
  # on teleport, which can later be used by the spawnLastLocation
  # strategy. WARNING: If you are using storage YAML and have
  # a decent-sized server (few hundred players), THIS CAN CREATE
  # TELEPORT LAG. Ebeans does not have this issue.
  recordLastLocation: true

  # Determine whether associated worlds ending in "_nether" and
  # "_the_end" use their base world strategies. This providdes an
  # easy way of having worlds and their associated worlds grouped
  # together without any effort on your part and is a closer match
  # to the default Minecraft experience for nether and the_end.
  associatedWorldsUseBaseStrategies: true
